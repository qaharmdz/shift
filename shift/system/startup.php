<?php

declare(strict_types=1);

if (!is_array($rootConfig)) {
    header($_SERVER['SERVER_PROTOCOL'] . ' 500 Internal Server Error', true, 500);
    header('Content-Type: text/html; charset=utf-8');
    exit('(╯°□°）╯︵ ┻━┻');
}

define('VERSION', '0.4.0-a.1'); // Staging: a.*, b.*, rc.*
list($major, $minor, $patch) = array_map('intval', explode('.', VERSION));
define('VERSION_ID', (($major * 10000) + ($minor * 100) + $patch));

if (!(PHP_VERSION_ID >= 80200)) {
    header($_SERVER['SERVER_PROTOCOL'] . ' 500 Internal Server Error', true, 500);
    header('Content-Type: text/html; charset=utf-8');
    exit(sprintf(
        'Your server is running PHP version %s but Shift v%s requires at least %s.',
        PHP_VERSION,
        VERSION,
        '8.2.0',
    ));
}

mb_internal_encoding('UTF-8');
date_default_timezone_set('UTC');
error_reporting(E_ALL);
ini_set('display_errors', '1');

//=== Protocols
$secure = false;
if (
    (!empty($_SERVER['secure']) && ($_SERVER['secure'] === 'on' || $_SERVER['secure'] !== 'off'))
    || $_SERVER['SERVER_PORT'] == 443
) {
    $secure = true;
} elseif (
    (!empty($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https')
    || (!empty($_SERVER['HTTP_X_FORWARDED_SSL']) && $_SERVER['HTTP_X_FORWARDED_SSL'] == 'on')
) {
    $secure = true;
}

$_SERVER['SECURE']         = $secure;
$_SERVER['HTTPS']          = $secure ? 'on' : 'off';
$_SERVER['PROTOCOL']       = $secure ? 'https://' : 'http://';
$_SERVER['REMOTE_ADDR']    = $_SERVER['REMOTE_ADDR'] ?? '127.0.0.1';
$_SERVER['REQUEST_METHOD'] = $_SERVER['REQUEST_METHOD'] ?? null;
$_SERVER['DOCUMENT_ROOT']  = PATH_PUBLIC;

//=== Define
define('PATH_APP', PATH_SHIFT . APP_FOLDER . DS);
define('PATH_SITE', PATH_SHIFT . 'site/');
define('PATH_EXTENSIONS', PATH_SHIFT . 'extensions/');
define('PATH_SYSTEM', PATH_SHIFT . 'system' . DS);
define('PATH_TEMP', PATH_SHIFT . 'temp' . DS);
define('PATH_MEDIA', PATH_PUBLIC . 'media' . DS);

//=== Autoloader
$loader = require PATH_SHIFT . 'vendor/autoload.php';

// psr4-lower generated by Shift\System\Autoload\Psr4Lower::classMap
if (is_file(PATH_SYSTEM . 'autoloader/classmap_psr4_lowercase.php')) {
    $psr4lower = require_once PATH_SYSTEM . 'autoloader/classmap_psr4_lowercase.php';
    $loader->addClassMap($psr4lower);
}

$loaderPsr4Lower = new Shift\System\Autoloader\ClassLoader($loader, PATH_SHIFT);
$loaderPsr4Lower->register();
