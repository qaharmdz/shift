<?php

declare(strict_types=1);

namespace Shift\System\Core\Autoload;

class Psr4Lower
{
    protected static $prefixPsr4 = 'Shift\\';

    /**
     * Map lowercase $prefixPsr4 namespace.
     *
     * @param  \Composer\Script\Event $event    Composer event: post-autoload-dump
     */
    public static function classMap()
    {
        $basedir   = str_replace('\\', '/', realpath(dirname(dirname(dirname(realpath(__DIR__) . DIRECTORY_SEPARATOR)))));
        $classMap  = require 'shift/vendor/composer/autoload_classmap.php';
        $psr4Lower = [];

        foreach ($classMap as $namespace => $path) {
            if (substr($namespace, 0, 6) === self::$prefixPsr4) {
                $psr4Lower[strtolower($namespace)] = str_replace(['\\', $basedir], ['/', ''], $path);
            }
        }

        self::saveTofile($psr4Lower, realpath(__DIR__) . DIRECTORY_SEPARATOR);
    }

    /**
     * Save classmap to file.
     *
     * @param  array  $psr4Lower
     * @param  string $baseDir
     * @param  string $pathSave
     */
    protected static function saveTofile(array $psr4Lower, string $pathSave)
    {
        $output  = '<?php' . "\n\n";
        $output .= '// classmap_psr4_lower.php @generated by Shift CMS' . "\n";
        $output .= '// Composer event: post-autoload-dump' . "\n\n";
        $output .= '$baseDir = dirname(dirname(dirname(__DIR__)));' . "\n\n";

        $output .= 'return [' . "\n";
        $output .= '    \'psr4lower\' => [' . "\n";

        foreach ($psr4Lower as $namespace => $path) {
            $output .= '        \'' . str_replace('\\', '\\\\', $namespace) . '\' => $baseDir . \'' . $path . "',\n";
        }

        $output .= '    ],' . "\n";
        $output .= '];' . "\n";

        $file = fopen($pathSave . 'classmap_psr4_lower.php', 'w');
        fwrite($file, $output);
        fclose($file);
    }
}
